ext {
  minJavaVersionForTests = JavaVersion.VERSION_1_8
}

group = 'io.opentelemetry.instrumentation'

apply from: "$rootDir/gradle/java.gradle"
apply from: "$rootDir/gradle/publish.gradle"

sourceCompatibility = '8'

dependencies {
  annotationProcessor "org.springframework.boot:spring-boot-autoconfigure-processor"
  implementation "org.springframework.boot:spring-boot-starter-validation"
  
  testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springboot) {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  
  implementation(project(':instrumentation-core:spring:spring-webmvc-3.1')){
    exclude group: 'org.slf4j', module: 'slf4j-simple'
  }
  implementation(project(':instrumentation-core:spring:spring-web-3.1')){
    exclude group: 'org.slf4j', module: 'slf4j-simple'
  }
  implementation(project(':instrumentation-core:spring:spring-webflux-5.0')){
    exclude group: 'org.slf4j', module: 'slf4j-simple'
  }
   
  compileOnly group: "io.opentelemetry", name: "opentelemetry-exporters-logging", version:"0.6.0"
  
  compileOnly group: 'io.grpc', name: 'grpc-netty-shaded', version: '1.24.0'
  compileOnly group: "io.opentelemetry", name: "opentelemetry-exporters-jaeger", version:"0.6.0"
  compileOnly group: "io.opentelemetry", name: "opentelemetry-exporters-otlp", version:"0.6.0"
  compileOnly group: "io.opentelemetry", name: "opentelemetry-exporters-zipkin", version:"0.6.0"
  
  //compileOnly deps.opentelemetryJaeger
  //compileOnly deps.opentelemetryOtlp
  //compileOnly deps.opentelemetryZipkin
}

test {
  useJUnitPlatform()
}
