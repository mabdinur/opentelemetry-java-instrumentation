ext {
  minJavaVersionForTests = JavaVersion.VERSION_1_7
}

group = 'io.opentelemetry.instrumentation'
version = '0.0.1-SNAPSHOT'

apply from: "$rootDir/gradle/java.gradle"
apply plugin: 'muzzle'

muzzle {
  pass {
    group = 'org.springframework'
    module = 'spring-webmvc'
    versions = "[3.1.0.RELEASE,]"
    skipVersions += ['1.2.1', '1.2.2', '1.2.3', '1.2.4'] // broken releases... missing dependencies
    skipVersions += '3.2.1.RELEASE' // missing a required class.  (bad release?)
    extraDependency "javax.servlet:javax.servlet-api:3.0.1"
    assertInverse = true
  }

  // FIXME: webmvc depends on web, so we need a separate integration for spring-web specifically.
  fail {
    group = 'org.springframework'
    module = 'spring-web'
    versions = "[,]"
    skipVersions += ['1.2.1', '1.2.2', '1.2.3', '1.2.4'] // broken releases... missing dependencies
    extraDependency "javax.servlet:javax.servlet-api:3.0.1"
  }
}

sourceCompatibility = '7'

dependencies {
  // copy-paste from instrumentation-core-aws-sdk:aws-sdk-2.2-core:
  // TODO(anuraaga): We currently include common instrumentation logic like decorators in the
  // bootstrap, but we need to move it out so manual instrumentation does not depend on code from
  // the agent, like Agent.
  api project(':auto-bootstrap')

  compileOnly project(':instrumentation-core:servlet')

  api deps.opentelemetryApi
  api group: 'org.springframework', name: 'spring-webmvc', version: '3.1.0.RELEASE'
  api group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
}

test {
  useJUnitPlatform()
}